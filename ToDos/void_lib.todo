ToDo:

1. File Operations using `std::fs`: 
    ☐ Read Files
        ☐ a. As a string
        ☐ b. Line by line

    ☐ Write Files
    ☐ Create Files
    ☐ Checking if a path exists
    ☐ Checking if a path is a file or a directory
    
    ☐ Delete Files [Might need when uploading original files?]


2. Directory Operations: 
    ☐ Create directory
    ☐ List directory contents
    ☐ Delete directory [Might need when uploading original but archived-directory?]
    ☐ Moving directory? 


3. Path Manipulation:
    ☐ Joining
    ☐ Splitting
    ☐ Normalizing
    ☐ Getting the absolute path
    ☐ Getting the relative path


4. Metadata Handling: 
    ☐ Getting the file metadata
    ☐ Getting the file name
    ☐ Getting the file extension
    ☐ Getting the file size
    ☐ Getting permissions

    ☐ Getting the directory name


5. Compression & Decompression:
    - Common compression algorithms = `zstd`, `flate2`
    ☐ Zip
    ☐ Unzip


6. Unit and Integration Testing:
    - Use Rust's built-in testing framework `(#[cfg(test)])` and consider using testing libraries like `assert_eq!` and `quickcheck`

    ☐ Write comprehensive unit tests and integration tests to ensure the correctness and reliability


7. Documentation: 
    - Using `rustdoc`? 